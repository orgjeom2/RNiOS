// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: user_auth.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace UserService {

  /// <summary>Holder for reflection information generated from user_auth.proto</summary>
  public static partial class UserAuthReflection {

    #region Descriptor
    /// <summary>File descriptor for user_auth.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UserAuthReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg91c2VyX2F1dGgucHJvdG8SDHVzZXJfc2VydmljZRoMZXJyb3JzLnByb3Rv",
            "ItICCglMb2dpbkluZm8SEgoKc2VsZl9jaGVjaxgFIAEoCBI1CgRhbm9uGAEg",
            "ASgLMiUudXNlcl9zZXJ2aWNlLkxvZ2luSW5mby5Bbm9ueW1vdXNJbmZvSAAS",
            "MgoCZmIYAiABKAsyJC51c2VyX3NlcnZpY2UuTG9naW5JbmZvLkZhY2Vib29r",
            "SW5mb0gAEjIKBWVtYWlsGAMgASgLMiEudXNlcl9zZXJ2aWNlLkxvZ2luSW5m",
            "by5FbWFpbEluZm9IABIZChFleHBpcmVfaW5fc2Vjb25kcxgEIAEoBBoiCg1B",
            "bm9ueW1vdXNJbmZvEhEKCWRldmljZV9pZBgBIAEoDBodCgxGYWNlYm9va0lu",
            "Zm8SDQoFdG9rZW4YASABKAkaLAoJRW1haWxJbmZvEg0KBWVtYWlsGAEgASgJ",
            "EhAKCHBhc3N3b3JkGAIgASgJQgYKBGluZm8iSQoLTG9naW5SZXN1bHQSFQoF",
            "ZXJyb3IYASABKAsyBi5FcnJvchISCgphdXRoX3Rva2VuGAIgASgJEg8KB3Vz",
            "ZXJfaWQYAyABKAQiUwoKTG9nb3V0SW5mbxISCgpzZWxmX2NoZWNrGAQgASgI",
            "EhQKCmF1dGhfdG9rZW4YAiABKAlIABIRCgd1c2VyX2lkGAMgASgESABCCAoG",
            "cmVxX2lkIjYKDExvZ291dFJlc3VsdBIVCgVlcnJvchgBIAEoCzIGLkVycm9y",
            "Eg8KB3VzZXJfaWQYAyABKAQiVAoLR2V0VXNlckluZm8SEgoKc2VsZl9jaGVj",
            "axgEIAEoCBIUCgphdXRoX3Rva2VuGAIgASgJSAASEQoHdXNlcl9pZBgDIAEo",
            "BEgAQggKBnJlcV9pZCJLCg1HZXRVc2VyUmVzdWx0EhUKBWVycm9yGAEgASgL",
            "MgYuRXJyb3ISEgoKYXV0aF90b2tlbhgCIAEoCRIPCgd1c2VyX2lkGAMgASgE",
            "MtABCghVc2VyQXV0aBI9CgVsb2dpbhIXLnVzZXJfc2VydmljZS5Mb2dpbklu",
            "Zm8aGS51c2VyX3NlcnZpY2UuTG9naW5SZXN1bHQiABJACgZsb2dvdXQSGC51",
            "c2VyX3NlcnZpY2UuTG9nb3V0SW5mbxoaLnVzZXJfc2VydmljZS5Mb2dvdXRS",
            "ZXN1bHQiABJDCgdnZXRVc2VyEhkudXNlcl9zZXJ2aWNlLkdldFVzZXJJbmZv",
            "GhsudXNlcl9zZXJ2aWNlLkdldFVzZXJSZXN1bHQiAFAAYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::ErrorsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::UserService.LoginInfo), global::UserService.LoginInfo.Parser, new[]{ "SelfCheck", "Anon", "Fb", "Email", "ExpireInSeconds" }, new[]{ "Info" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::UserService.LoginInfo.Types.AnonymousInfo), global::UserService.LoginInfo.Types.AnonymousInfo.Parser, new[]{ "DeviceId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserService.LoginInfo.Types.FacebookInfo), global::UserService.LoginInfo.Types.FacebookInfo.Parser, new[]{ "Token" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserService.LoginInfo.Types.EmailInfo), global::UserService.LoginInfo.Types.EmailInfo.Parser, new[]{ "Email", "Password" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserService.LoginResult), global::UserService.LoginResult.Parser, new[]{ "Error", "AuthToken", "UserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserService.LogoutInfo), global::UserService.LogoutInfo.Parser, new[]{ "SelfCheck", "AuthToken", "UserId" }, new[]{ "ReqId" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserService.LogoutResult), global::UserService.LogoutResult.Parser, new[]{ "Error", "UserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserService.GetUserInfo), global::UserService.GetUserInfo.Parser, new[]{ "SelfCheck", "AuthToken", "UserId" }, new[]{ "ReqId" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserService.GetUserResult), global::UserService.GetUserResult.Parser, new[]{ "Error", "AuthToken", "UserId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class LoginInfo : pb::IMessage<LoginInfo> {
    private static readonly pb::MessageParser<LoginInfo> _parser = new pb::MessageParser<LoginInfo>(() => new LoginInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserService.UserAuthReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginInfo(LoginInfo other) : this() {
      selfCheck_ = other.selfCheck_;
      expireInSeconds_ = other.expireInSeconds_;
      switch (other.InfoCase) {
        case InfoOneofCase.Anon:
          Anon = other.Anon.Clone();
          break;
        case InfoOneofCase.Fb:
          Fb = other.Fb.Clone();
          break;
        case InfoOneofCase.Email:
          Email = other.Email.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginInfo Clone() {
      return new LoginInfo(this);
    }

    /// <summary>Field number for the "self_check" field.</summary>
    public const int SelfCheckFieldNumber = 5;
    private bool selfCheck_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SelfCheck {
      get { return selfCheck_; }
      set {
        selfCheck_ = value;
      }
    }

    /// <summary>Field number for the "anon" field.</summary>
    public const int AnonFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::UserService.LoginInfo.Types.AnonymousInfo Anon {
      get { return infoCase_ == InfoOneofCase.Anon ? (global::UserService.LoginInfo.Types.AnonymousInfo) info_ : null; }
      set {
        info_ = value;
        infoCase_ = value == null ? InfoOneofCase.None : InfoOneofCase.Anon;
      }
    }

    /// <summary>Field number for the "fb" field.</summary>
    public const int FbFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::UserService.LoginInfo.Types.FacebookInfo Fb {
      get { return infoCase_ == InfoOneofCase.Fb ? (global::UserService.LoginInfo.Types.FacebookInfo) info_ : null; }
      set {
        info_ = value;
        infoCase_ = value == null ? InfoOneofCase.None : InfoOneofCase.Fb;
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::UserService.LoginInfo.Types.EmailInfo Email {
      get { return infoCase_ == InfoOneofCase.Email ? (global::UserService.LoginInfo.Types.EmailInfo) info_ : null; }
      set {
        info_ = value;
        infoCase_ = value == null ? InfoOneofCase.None : InfoOneofCase.Email;
      }
    }

    /// <summary>Field number for the "expire_in_seconds" field.</summary>
    public const int ExpireInSecondsFieldNumber = 4;
    private ulong expireInSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ExpireInSeconds {
      get { return expireInSeconds_; }
      set {
        expireInSeconds_ = value;
      }
    }

    private object info_;
    /// <summary>Enum of possible cases for the "info" oneof.</summary>
    public enum InfoOneofCase {
      None = 0,
      Anon = 1,
      Fb = 2,
      Email = 3,
    }
    private InfoOneofCase infoCase_ = InfoOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoOneofCase InfoCase {
      get { return infoCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInfo() {
      infoCase_ = InfoOneofCase.None;
      info_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SelfCheck != other.SelfCheck) return false;
      if (!object.Equals(Anon, other.Anon)) return false;
      if (!object.Equals(Fb, other.Fb)) return false;
      if (!object.Equals(Email, other.Email)) return false;
      if (ExpireInSeconds != other.ExpireInSeconds) return false;
      if (InfoCase != other.InfoCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SelfCheck != false) hash ^= SelfCheck.GetHashCode();
      if (infoCase_ == InfoOneofCase.Anon) hash ^= Anon.GetHashCode();
      if (infoCase_ == InfoOneofCase.Fb) hash ^= Fb.GetHashCode();
      if (infoCase_ == InfoOneofCase.Email) hash ^= Email.GetHashCode();
      if (ExpireInSeconds != 0UL) hash ^= ExpireInSeconds.GetHashCode();
      hash ^= (int) infoCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (infoCase_ == InfoOneofCase.Anon) {
        output.WriteRawTag(10);
        output.WriteMessage(Anon);
      }
      if (infoCase_ == InfoOneofCase.Fb) {
        output.WriteRawTag(18);
        output.WriteMessage(Fb);
      }
      if (infoCase_ == InfoOneofCase.Email) {
        output.WriteRawTag(26);
        output.WriteMessage(Email);
      }
      if (ExpireInSeconds != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(ExpireInSeconds);
      }
      if (SelfCheck != false) {
        output.WriteRawTag(40);
        output.WriteBool(SelfCheck);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SelfCheck != false) {
        size += 1 + 1;
      }
      if (infoCase_ == InfoOneofCase.Anon) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Anon);
      }
      if (infoCase_ == InfoOneofCase.Fb) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fb);
      }
      if (infoCase_ == InfoOneofCase.Email) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Email);
      }
      if (ExpireInSeconds != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ExpireInSeconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginInfo other) {
      if (other == null) {
        return;
      }
      if (other.SelfCheck != false) {
        SelfCheck = other.SelfCheck;
      }
      if (other.ExpireInSeconds != 0UL) {
        ExpireInSeconds = other.ExpireInSeconds;
      }
      switch (other.InfoCase) {
        case InfoOneofCase.Anon:
          if (Anon == null) {
            Anon = new global::UserService.LoginInfo.Types.AnonymousInfo();
          }
          Anon.MergeFrom(other.Anon);
          break;
        case InfoOneofCase.Fb:
          if (Fb == null) {
            Fb = new global::UserService.LoginInfo.Types.FacebookInfo();
          }
          Fb.MergeFrom(other.Fb);
          break;
        case InfoOneofCase.Email:
          if (Email == null) {
            Email = new global::UserService.LoginInfo.Types.EmailInfo();
          }
          Email.MergeFrom(other.Email);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::UserService.LoginInfo.Types.AnonymousInfo subBuilder = new global::UserService.LoginInfo.Types.AnonymousInfo();
            if (infoCase_ == InfoOneofCase.Anon) {
              subBuilder.MergeFrom(Anon);
            }
            input.ReadMessage(subBuilder);
            Anon = subBuilder;
            break;
          }
          case 18: {
            global::UserService.LoginInfo.Types.FacebookInfo subBuilder = new global::UserService.LoginInfo.Types.FacebookInfo();
            if (infoCase_ == InfoOneofCase.Fb) {
              subBuilder.MergeFrom(Fb);
            }
            input.ReadMessage(subBuilder);
            Fb = subBuilder;
            break;
          }
          case 26: {
            global::UserService.LoginInfo.Types.EmailInfo subBuilder = new global::UserService.LoginInfo.Types.EmailInfo();
            if (infoCase_ == InfoOneofCase.Email) {
              subBuilder.MergeFrom(Email);
            }
            input.ReadMessage(subBuilder);
            Email = subBuilder;
            break;
          }
          case 32: {
            ExpireInSeconds = input.ReadUInt64();
            break;
          }
          case 40: {
            SelfCheck = input.ReadBool();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the LoginInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class AnonymousInfo : pb::IMessage<AnonymousInfo> {
        private static readonly pb::MessageParser<AnonymousInfo> _parser = new pb::MessageParser<AnonymousInfo>(() => new AnonymousInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AnonymousInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::UserService.LoginInfo.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AnonymousInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AnonymousInfo(AnonymousInfo other) : this() {
          deviceId_ = other.deviceId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AnonymousInfo Clone() {
          return new AnonymousInfo(this);
        }

        /// <summary>Field number for the "device_id" field.</summary>
        public const int DeviceIdFieldNumber = 1;
        private pb::ByteString deviceId_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString DeviceId {
          get { return deviceId_; }
          set {
            deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AnonymousInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AnonymousInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (DeviceId != other.DeviceId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (DeviceId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(DeviceId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (DeviceId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(DeviceId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AnonymousInfo other) {
          if (other == null) {
            return;
          }
          if (other.DeviceId.Length != 0) {
            DeviceId = other.DeviceId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                DeviceId = input.ReadBytes();
                break;
              }
            }
          }
        }

      }

      public sealed partial class FacebookInfo : pb::IMessage<FacebookInfo> {
        private static readonly pb::MessageParser<FacebookInfo> _parser = new pb::MessageParser<FacebookInfo>(() => new FacebookInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FacebookInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::UserService.LoginInfo.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FacebookInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FacebookInfo(FacebookInfo other) : this() {
          token_ = other.token_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FacebookInfo Clone() {
          return new FacebookInfo(this);
        }

        /// <summary>Field number for the "token" field.</summary>
        public const int TokenFieldNumber = 1;
        private string token_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Token {
          get { return token_; }
          set {
            token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as FacebookInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FacebookInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Token != other.Token) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Token.Length != 0) hash ^= Token.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Token.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Token);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Token.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FacebookInfo other) {
          if (other == null) {
            return;
          }
          if (other.Token.Length != 0) {
            Token = other.Token;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Token = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class EmailInfo : pb::IMessage<EmailInfo> {
        private static readonly pb::MessageParser<EmailInfo> _parser = new pb::MessageParser<EmailInfo>(() => new EmailInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EmailInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::UserService.LoginInfo.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EmailInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EmailInfo(EmailInfo other) : this() {
          email_ = other.email_;
          password_ = other.password_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EmailInfo Clone() {
          return new EmailInfo(this);
        }

        /// <summary>Field number for the "email" field.</summary>
        public const int EmailFieldNumber = 1;
        private string email_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Email {
          get { return email_; }
          set {
            email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "password" field.</summary>
        public const int PasswordFieldNumber = 2;
        private string password_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Password {
          get { return password_; }
          set {
            password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as EmailInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EmailInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Email != other.Email) return false;
          if (Password != other.Password) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Email.Length != 0) hash ^= Email.GetHashCode();
          if (Password.Length != 0) hash ^= Password.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Email.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Email);
          }
          if (Password.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Password);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Email.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
          }
          if (Password.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EmailInfo other) {
          if (other == null) {
            return;
          }
          if (other.Email.Length != 0) {
            Email = other.Email;
          }
          if (other.Password.Length != 0) {
            Password = other.Password;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Email = input.ReadString();
                break;
              }
              case 18: {
                Password = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class LoginResult : pb::IMessage<LoginResult> {
    private static readonly pb::MessageParser<LoginResult> _parser = new pb::MessageParser<LoginResult>(() => new LoginResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserService.UserAuthReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResult(LoginResult other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      authToken_ = other.authToken_;
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResult Clone() {
      return new LoginResult(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Error error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Error Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "auth_token" field.</summary>
    public const int AuthTokenFieldNumber = 2;
    private string authToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthToken {
      get { return authToken_; }
      set {
        authToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 3;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if (AuthToken != other.AuthToken) return false;
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (AuthToken.Length != 0) hash ^= AuthToken.GetHashCode();
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (AuthToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AuthToken);
      }
      if (UserId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (AuthToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthToken);
      }
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginResult other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          error_ = new global::Error();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.AuthToken.Length != 0) {
        AuthToken = other.AuthToken;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (error_ == null) {
              error_ = new global::Error();
            }
            input.ReadMessage(error_);
            break;
          }
          case 18: {
            AuthToken = input.ReadString();
            break;
          }
          case 24: {
            UserId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LogoutInfo : pb::IMessage<LogoutInfo> {
    private static readonly pb::MessageParser<LogoutInfo> _parser = new pb::MessageParser<LogoutInfo>(() => new LogoutInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogoutInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserService.UserAuthReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutInfo(LogoutInfo other) : this() {
      selfCheck_ = other.selfCheck_;
      switch (other.ReqIdCase) {
        case ReqIdOneofCase.AuthToken:
          AuthToken = other.AuthToken;
          break;
        case ReqIdOneofCase.UserId:
          UserId = other.UserId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutInfo Clone() {
      return new LogoutInfo(this);
    }

    /// <summary>Field number for the "self_check" field.</summary>
    public const int SelfCheckFieldNumber = 4;
    private bool selfCheck_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SelfCheck {
      get { return selfCheck_; }
      set {
        selfCheck_ = value;
      }
    }

    /// <summary>Field number for the "auth_token" field.</summary>
    public const int AuthTokenFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthToken {
      get { return reqIdCase_ == ReqIdOneofCase.AuthToken ? (string) reqId_ : ""; }
      set {
        reqId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        reqIdCase_ = ReqIdOneofCase.AuthToken;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return reqIdCase_ == ReqIdOneofCase.UserId ? (ulong) reqId_ : 0UL; }
      set {
        reqId_ = value;
        reqIdCase_ = ReqIdOneofCase.UserId;
      }
    }

    private object reqId_;
    /// <summary>Enum of possible cases for the "req_id" oneof.</summary>
    public enum ReqIdOneofCase {
      None = 0,
      AuthToken = 2,
      UserId = 3,
    }
    private ReqIdOneofCase reqIdCase_ = ReqIdOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqIdOneofCase ReqIdCase {
      get { return reqIdCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReqId() {
      reqIdCase_ = ReqIdOneofCase.None;
      reqId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogoutInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogoutInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SelfCheck != other.SelfCheck) return false;
      if (AuthToken != other.AuthToken) return false;
      if (UserId != other.UserId) return false;
      if (ReqIdCase != other.ReqIdCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SelfCheck != false) hash ^= SelfCheck.GetHashCode();
      if (reqIdCase_ == ReqIdOneofCase.AuthToken) hash ^= AuthToken.GetHashCode();
      if (reqIdCase_ == ReqIdOneofCase.UserId) hash ^= UserId.GetHashCode();
      hash ^= (int) reqIdCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reqIdCase_ == ReqIdOneofCase.AuthToken) {
        output.WriteRawTag(18);
        output.WriteString(AuthToken);
      }
      if (reqIdCase_ == ReqIdOneofCase.UserId) {
        output.WriteRawTag(24);
        output.WriteUInt64(UserId);
      }
      if (SelfCheck != false) {
        output.WriteRawTag(32);
        output.WriteBool(SelfCheck);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SelfCheck != false) {
        size += 1 + 1;
      }
      if (reqIdCase_ == ReqIdOneofCase.AuthToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthToken);
      }
      if (reqIdCase_ == ReqIdOneofCase.UserId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogoutInfo other) {
      if (other == null) {
        return;
      }
      if (other.SelfCheck != false) {
        SelfCheck = other.SelfCheck;
      }
      switch (other.ReqIdCase) {
        case ReqIdOneofCase.AuthToken:
          AuthToken = other.AuthToken;
          break;
        case ReqIdOneofCase.UserId:
          UserId = other.UserId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            AuthToken = input.ReadString();
            break;
          }
          case 24: {
            UserId = input.ReadUInt64();
            break;
          }
          case 32: {
            SelfCheck = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LogoutResult : pb::IMessage<LogoutResult> {
    private static readonly pb::MessageParser<LogoutResult> _parser = new pb::MessageParser<LogoutResult>(() => new LogoutResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogoutResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserService.UserAuthReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutResult(LogoutResult other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutResult Clone() {
      return new LogoutResult(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Error error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Error Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 3;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogoutResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogoutResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (UserId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogoutResult other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          error_ = new global::Error();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (error_ == null) {
              error_ = new global::Error();
            }
            input.ReadMessage(error_);
            break;
          }
          case 24: {
            UserId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// или по auth_token получаем user_id или наоборот
  /// </summary>
  public sealed partial class GetUserInfo : pb::IMessage<GetUserInfo> {
    private static readonly pb::MessageParser<GetUserInfo> _parser = new pb::MessageParser<GetUserInfo>(() => new GetUserInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUserInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserService.UserAuthReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserInfo(GetUserInfo other) : this() {
      selfCheck_ = other.selfCheck_;
      switch (other.ReqIdCase) {
        case ReqIdOneofCase.AuthToken:
          AuthToken = other.AuthToken;
          break;
        case ReqIdOneofCase.UserId:
          UserId = other.UserId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserInfo Clone() {
      return new GetUserInfo(this);
    }

    /// <summary>Field number for the "self_check" field.</summary>
    public const int SelfCheckFieldNumber = 4;
    private bool selfCheck_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SelfCheck {
      get { return selfCheck_; }
      set {
        selfCheck_ = value;
      }
    }

    /// <summary>Field number for the "auth_token" field.</summary>
    public const int AuthTokenFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthToken {
      get { return reqIdCase_ == ReqIdOneofCase.AuthToken ? (string) reqId_ : ""; }
      set {
        reqId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        reqIdCase_ = ReqIdOneofCase.AuthToken;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return reqIdCase_ == ReqIdOneofCase.UserId ? (ulong) reqId_ : 0UL; }
      set {
        reqId_ = value;
        reqIdCase_ = ReqIdOneofCase.UserId;
      }
    }

    private object reqId_;
    /// <summary>Enum of possible cases for the "req_id" oneof.</summary>
    public enum ReqIdOneofCase {
      None = 0,
      AuthToken = 2,
      UserId = 3,
    }
    private ReqIdOneofCase reqIdCase_ = ReqIdOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqIdOneofCase ReqIdCase {
      get { return reqIdCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReqId() {
      reqIdCase_ = ReqIdOneofCase.None;
      reqId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUserInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUserInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SelfCheck != other.SelfCheck) return false;
      if (AuthToken != other.AuthToken) return false;
      if (UserId != other.UserId) return false;
      if (ReqIdCase != other.ReqIdCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SelfCheck != false) hash ^= SelfCheck.GetHashCode();
      if (reqIdCase_ == ReqIdOneofCase.AuthToken) hash ^= AuthToken.GetHashCode();
      if (reqIdCase_ == ReqIdOneofCase.UserId) hash ^= UserId.GetHashCode();
      hash ^= (int) reqIdCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reqIdCase_ == ReqIdOneofCase.AuthToken) {
        output.WriteRawTag(18);
        output.WriteString(AuthToken);
      }
      if (reqIdCase_ == ReqIdOneofCase.UserId) {
        output.WriteRawTag(24);
        output.WriteUInt64(UserId);
      }
      if (SelfCheck != false) {
        output.WriteRawTag(32);
        output.WriteBool(SelfCheck);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SelfCheck != false) {
        size += 1 + 1;
      }
      if (reqIdCase_ == ReqIdOneofCase.AuthToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthToken);
      }
      if (reqIdCase_ == ReqIdOneofCase.UserId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUserInfo other) {
      if (other == null) {
        return;
      }
      if (other.SelfCheck != false) {
        SelfCheck = other.SelfCheck;
      }
      switch (other.ReqIdCase) {
        case ReqIdOneofCase.AuthToken:
          AuthToken = other.AuthToken;
          break;
        case ReqIdOneofCase.UserId:
          UserId = other.UserId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            AuthToken = input.ReadString();
            break;
          }
          case 24: {
            UserId = input.ReadUInt64();
            break;
          }
          case 32: {
            SelfCheck = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetUserResult : pb::IMessage<GetUserResult> {
    private static readonly pb::MessageParser<GetUserResult> _parser = new pb::MessageParser<GetUserResult>(() => new GetUserResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUserResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserService.UserAuthReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserResult(GetUserResult other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      authToken_ = other.authToken_;
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserResult Clone() {
      return new GetUserResult(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Error error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Error Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "auth_token" field.</summary>
    public const int AuthTokenFieldNumber = 2;
    private string authToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthToken {
      get { return authToken_; }
      set {
        authToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 3;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUserResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUserResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if (AuthToken != other.AuthToken) return false;
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (AuthToken.Length != 0) hash ^= AuthToken.GetHashCode();
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (AuthToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AuthToken);
      }
      if (UserId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (AuthToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthToken);
      }
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUserResult other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          error_ = new global::Error();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.AuthToken.Length != 0) {
        AuthToken = other.AuthToken;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (error_ == null) {
              error_ = new global::Error();
            }
            input.ReadMessage(error_);
            break;
          }
          case 18: {
            AuthToken = input.ReadString();
            break;
          }
          case 24: {
            UserId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
